// sdram_design.v

// Generated using ACDS version 18.0 614

`timescale 1 ps / 1 ps
module sdram_design (
		input  wire        clk_clk,       //   clk.clk
		input  wire        reset_reset_n, // reset.reset_n
		inout  wire [15:0] sdram_dq,      // sdram.dq
		output wire [11:0] sdram_address, //      .address
		output wire [1:0]  sdram_ba,      //      .ba
		output wire [1:0]  sdram_dqm,     //      .dqm
		output wire        sdram_osc,     //      .osc
		output wire        sdram_cs,      //      .cs
		output wire        sdram_we,      //      .we
		output wire        sdram_ras,     //      .ras
		output wire        sdram_cas,     //      .cas
		output wire [7:0]  sdram_led,     //      .led
		input  wire [7:0]  user_awid,     //  user.awid
		input  wire [22:0] user_awaddr,   //      .awaddr
		input  wire [7:0]  user_awlen,    //      .awlen
		input  wire [2:0]  user_awsize,   //      .awsize
		input  wire [1:0]  user_awburst,  //      .awburst
		input  wire [0:0]  user_awlock,   //      .awlock
		input  wire [3:0]  user_awcache,  //      .awcache
		input  wire [2:0]  user_awprot,   //      .awprot
		input  wire [3:0]  user_awqos,    //      .awqos
		input  wire [3:0]  user_awregion, //      .awregion
		input  wire        user_awvalid,  //      .awvalid
		output wire        user_awready,  //      .awready
		input  wire [15:0] user_wdata,    //      .wdata
		input  wire [1:0]  user_wstrb,    //      .wstrb
		input  wire        user_wlast,    //      .wlast
		input  wire        user_wvalid,   //      .wvalid
		output wire        user_wready,   //      .wready
		output wire [7:0]  user_bid,      //      .bid
		output wire [1:0]  user_bresp,    //      .bresp
		output wire        user_bvalid,   //      .bvalid
		input  wire        user_bready,   //      .bready
		input  wire [7:0]  user_arid,     //      .arid
		input  wire [22:0] user_araddr,   //      .araddr
		input  wire [7:0]  user_arlen,    //      .arlen
		input  wire [2:0]  user_arsize,   //      .arsize
		input  wire [1:0]  user_arburst,  //      .arburst
		input  wire [0:0]  user_arlock,   //      .arlock
		input  wire [3:0]  user_arcache,  //      .arcache
		input  wire [2:0]  user_arprot,   //      .arprot
		input  wire [3:0]  user_arqos,    //      .arqos
		input  wire [3:0]  user_arregion, //      .arregion
		input  wire        user_arvalid,  //      .arvalid
		output wire        user_arready,  //      .arready
		output wire [7:0]  user_rid,      //      .rid
		output wire [15:0] user_rdata,    //      .rdata
		output wire [1:0]  user_rresp,    //      .rresp
		output wire        user_rlast,    //      .rlast
		output wire        user_rvalid,   //      .rvalid
		input  wire        user_rready    //      .rready
	);

	wire   [1:0] axi_bridge_0_m0_awburst;                             // axi_bridge_0:m0_awburst -> mm_interconnect_0:axi_bridge_0_m0_awburst
	wire   [3:0] axi_bridge_0_m0_arregion;                            // axi_bridge_0:m0_arregion -> mm_interconnect_0:axi_bridge_0_m0_arregion
	wire   [7:0] axi_bridge_0_m0_arlen;                               // axi_bridge_0:m0_arlen -> mm_interconnect_0:axi_bridge_0_m0_arlen
	wire   [3:0] axi_bridge_0_m0_arqos;                               // axi_bridge_0:m0_arqos -> mm_interconnect_0:axi_bridge_0_m0_arqos
	wire   [1:0] axi_bridge_0_m0_wstrb;                               // axi_bridge_0:m0_wstrb -> mm_interconnect_0:axi_bridge_0_m0_wstrb
	wire         axi_bridge_0_m0_wready;                              // mm_interconnect_0:axi_bridge_0_m0_wready -> axi_bridge_0:m0_wready
	wire   [7:0] axi_bridge_0_m0_rid;                                 // mm_interconnect_0:axi_bridge_0_m0_rid -> axi_bridge_0:m0_rid
	wire         axi_bridge_0_m0_rready;                              // axi_bridge_0:m0_rready -> mm_interconnect_0:axi_bridge_0_m0_rready
	wire   [7:0] axi_bridge_0_m0_awlen;                               // axi_bridge_0:m0_awlen -> mm_interconnect_0:axi_bridge_0_m0_awlen
	wire   [3:0] axi_bridge_0_m0_awqos;                               // axi_bridge_0:m0_awqos -> mm_interconnect_0:axi_bridge_0_m0_awqos
	wire   [3:0] axi_bridge_0_m0_arcache;                             // axi_bridge_0:m0_arcache -> mm_interconnect_0:axi_bridge_0_m0_arcache
	wire         axi_bridge_0_m0_wvalid;                              // axi_bridge_0:m0_wvalid -> mm_interconnect_0:axi_bridge_0_m0_wvalid
	wire  [22:0] axi_bridge_0_m0_araddr;                              // axi_bridge_0:m0_araddr -> mm_interconnect_0:axi_bridge_0_m0_araddr
	wire   [2:0] axi_bridge_0_m0_arprot;                              // axi_bridge_0:m0_arprot -> mm_interconnect_0:axi_bridge_0_m0_arprot
	wire   [2:0] axi_bridge_0_m0_awprot;                              // axi_bridge_0:m0_awprot -> mm_interconnect_0:axi_bridge_0_m0_awprot
	wire  [15:0] axi_bridge_0_m0_wdata;                               // axi_bridge_0:m0_wdata -> mm_interconnect_0:axi_bridge_0_m0_wdata
	wire         axi_bridge_0_m0_arvalid;                             // axi_bridge_0:m0_arvalid -> mm_interconnect_0:axi_bridge_0_m0_arvalid
	wire   [3:0] axi_bridge_0_m0_awcache;                             // axi_bridge_0:m0_awcache -> mm_interconnect_0:axi_bridge_0_m0_awcache
	wire   [7:0] axi_bridge_0_m0_arid;                                // axi_bridge_0:m0_arid -> mm_interconnect_0:axi_bridge_0_m0_arid
	wire   [0:0] axi_bridge_0_m0_arlock;                              // axi_bridge_0:m0_arlock -> mm_interconnect_0:axi_bridge_0_m0_arlock
	wire   [0:0] axi_bridge_0_m0_awlock;                              // axi_bridge_0:m0_awlock -> mm_interconnect_0:axi_bridge_0_m0_awlock
	wire  [22:0] axi_bridge_0_m0_awaddr;                              // axi_bridge_0:m0_awaddr -> mm_interconnect_0:axi_bridge_0_m0_awaddr
	wire   [1:0] axi_bridge_0_m0_bresp;                               // mm_interconnect_0:axi_bridge_0_m0_bresp -> axi_bridge_0:m0_bresp
	wire         axi_bridge_0_m0_arready;                             // mm_interconnect_0:axi_bridge_0_m0_arready -> axi_bridge_0:m0_arready
	wire  [15:0] axi_bridge_0_m0_rdata;                               // mm_interconnect_0:axi_bridge_0_m0_rdata -> axi_bridge_0:m0_rdata
	wire         axi_bridge_0_m0_awready;                             // mm_interconnect_0:axi_bridge_0_m0_awready -> axi_bridge_0:m0_awready
	wire   [1:0] axi_bridge_0_m0_arburst;                             // axi_bridge_0:m0_arburst -> mm_interconnect_0:axi_bridge_0_m0_arburst
	wire   [2:0] axi_bridge_0_m0_arsize;                              // axi_bridge_0:m0_arsize -> mm_interconnect_0:axi_bridge_0_m0_arsize
	wire         axi_bridge_0_m0_bready;                              // axi_bridge_0:m0_bready -> mm_interconnect_0:axi_bridge_0_m0_bready
	wire         axi_bridge_0_m0_rlast;                               // mm_interconnect_0:axi_bridge_0_m0_rlast -> axi_bridge_0:m0_rlast
	wire         axi_bridge_0_m0_wlast;                               // axi_bridge_0:m0_wlast -> mm_interconnect_0:axi_bridge_0_m0_wlast
	wire   [3:0] axi_bridge_0_m0_awregion;                            // axi_bridge_0:m0_awregion -> mm_interconnect_0:axi_bridge_0_m0_awregion
	wire   [1:0] axi_bridge_0_m0_rresp;                               // mm_interconnect_0:axi_bridge_0_m0_rresp -> axi_bridge_0:m0_rresp
	wire   [7:0] axi_bridge_0_m0_awid;                                // axi_bridge_0:m0_awid -> mm_interconnect_0:axi_bridge_0_m0_awid
	wire   [7:0] axi_bridge_0_m0_bid;                                 // mm_interconnect_0:axi_bridge_0_m0_bid -> axi_bridge_0:m0_bid
	wire         axi_bridge_0_m0_bvalid;                              // mm_interconnect_0:axi_bridge_0_m0_bvalid -> axi_bridge_0:m0_bvalid
	wire   [2:0] axi_bridge_0_m0_awsize;                              // axi_bridge_0:m0_awsize -> mm_interconnect_0:axi_bridge_0_m0_awsize
	wire         axi_bridge_0_m0_awvalid;                             // axi_bridge_0:m0_awvalid -> mm_interconnect_0:axi_bridge_0_m0_awvalid
	wire         axi_bridge_0_m0_rvalid;                              // mm_interconnect_0:axi_bridge_0_m0_rvalid -> axi_bridge_0:m0_rvalid
	wire   [1:0] mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_awburst; // mm_interconnect_0:MT48LC4M16A2_AXI_0_axs_s0_awburst -> MT48LC4M16A2_AXI_0:axs_s0_awburst
	wire   [7:0] mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_arlen;   // mm_interconnect_0:MT48LC4M16A2_AXI_0_axs_s0_arlen -> MT48LC4M16A2_AXI_0:axs_s0_arlen
	wire   [3:0] mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_wstrb;   // mm_interconnect_0:MT48LC4M16A2_AXI_0_axs_s0_wstrb -> MT48LC4M16A2_AXI_0:axs_s0_wstrb
	wire         mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_wready;  // MT48LC4M16A2_AXI_0:axs_s0_wready -> mm_interconnect_0:MT48LC4M16A2_AXI_0_axs_s0_wready
	wire   [7:0] mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_rid;     // MT48LC4M16A2_AXI_0:axs_s0_rid -> mm_interconnect_0:MT48LC4M16A2_AXI_0_axs_s0_rid
	wire         mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_rready;  // mm_interconnect_0:MT48LC4M16A2_AXI_0_axs_s0_rready -> MT48LC4M16A2_AXI_0:axs_s0_rready
	wire   [7:0] mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_awlen;   // mm_interconnect_0:MT48LC4M16A2_AXI_0_axs_s0_awlen -> MT48LC4M16A2_AXI_0:axs_s0_awlen
	wire         mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_wvalid;  // mm_interconnect_0:MT48LC4M16A2_AXI_0_axs_s0_wvalid -> MT48LC4M16A2_AXI_0:axs_s0_wvalid
	wire  [22:0] mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_araddr;  // mm_interconnect_0:MT48LC4M16A2_AXI_0_axs_s0_araddr -> MT48LC4M16A2_AXI_0:axs_s0_araddr
	wire  [31:0] mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_wdata;   // mm_interconnect_0:MT48LC4M16A2_AXI_0_axs_s0_wdata -> MT48LC4M16A2_AXI_0:axs_s0_wdata
	wire         mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_arvalid; // mm_interconnect_0:MT48LC4M16A2_AXI_0_axs_s0_arvalid -> MT48LC4M16A2_AXI_0:axs_s0_arvalid
	wire   [7:0] mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_arid;    // mm_interconnect_0:MT48LC4M16A2_AXI_0_axs_s0_arid -> MT48LC4M16A2_AXI_0:axs_s0_arid
	wire  [22:0] mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_awaddr;  // mm_interconnect_0:MT48LC4M16A2_AXI_0_axs_s0_awaddr -> MT48LC4M16A2_AXI_0:axs_s0_awaddr
	wire         mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_arready; // MT48LC4M16A2_AXI_0:axs_s0_arready -> mm_interconnect_0:MT48LC4M16A2_AXI_0_axs_s0_arready
	wire  [31:0] mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_rdata;   // MT48LC4M16A2_AXI_0:axs_s0_rdata -> mm_interconnect_0:MT48LC4M16A2_AXI_0_axs_s0_rdata
	wire         mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_awready; // MT48LC4M16A2_AXI_0:axs_s0_awready -> mm_interconnect_0:MT48LC4M16A2_AXI_0_axs_s0_awready
	wire   [1:0] mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_arburst; // mm_interconnect_0:MT48LC4M16A2_AXI_0_axs_s0_arburst -> MT48LC4M16A2_AXI_0:axs_s0_arburst
	wire   [2:0] mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_arsize;  // mm_interconnect_0:MT48LC4M16A2_AXI_0_axs_s0_arsize -> MT48LC4M16A2_AXI_0:axs_s0_arsize
	wire         mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_bready;  // mm_interconnect_0:MT48LC4M16A2_AXI_0_axs_s0_bready -> MT48LC4M16A2_AXI_0:axs_s0_bready
	wire         mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_rlast;   // MT48LC4M16A2_AXI_0:axs_s0_rlast -> mm_interconnect_0:MT48LC4M16A2_AXI_0_axs_s0_rlast
	wire   [7:0] mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_awid;    // mm_interconnect_0:MT48LC4M16A2_AXI_0_axs_s0_awid -> MT48LC4M16A2_AXI_0:axs_s0_awid
	wire   [7:0] mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_bid;     // MT48LC4M16A2_AXI_0:axs_s0_bid -> mm_interconnect_0:MT48LC4M16A2_AXI_0_axs_s0_bid
	wire         mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_bvalid;  // MT48LC4M16A2_AXI_0:axs_s0_bvalid -> mm_interconnect_0:MT48LC4M16A2_AXI_0_axs_s0_bvalid
	wire   [2:0] mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_awsize;  // mm_interconnect_0:MT48LC4M16A2_AXI_0_axs_s0_awsize -> MT48LC4M16A2_AXI_0:axs_s0_awsize
	wire         mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_awvalid; // mm_interconnect_0:MT48LC4M16A2_AXI_0_axs_s0_awvalid -> MT48LC4M16A2_AXI_0:axs_s0_awvalid
	wire         mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_rvalid;  // MT48LC4M16A2_AXI_0:axs_s0_rvalid -> mm_interconnect_0:MT48LC4M16A2_AXI_0_axs_s0_rvalid
	wire         rst_controller_reset_out_reset;                      // rst_controller:reset_out -> [MT48LC4M16A2_AXI_0:reset, axi_bridge_0:aresetn, mm_interconnect_0:axi_bridge_0_clk_reset_reset_bridge_in_reset_reset]

	sdram mt48lc4m16a2_axi_0 (
		.clk            (clk_clk),                                             //  clock.clk
		.reset          (rst_controller_reset_out_reset),                      //  reset.reset
		.dq             (sdram_dq),                                            //  sdram.dq
		.address        (sdram_address),                                       //       .address
		.ba             (sdram_ba),                                            //       .ba
		.dqm            (sdram_dqm),                                           //       .dqm
		.osc            (sdram_osc),                                           //       .osc
		.cs             (sdram_cs),                                            //       .cs
		.we             (sdram_we),                                            //       .we
		.ras            (sdram_ras),                                           //       .ras
		.cas            (sdram_cas),                                           //       .cas
		.led            (sdram_led),                                           //       .led
		.axs_s0_awid    (mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_awid),    // axs_s0.awid
		.axs_s0_awaddr  (mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_awaddr),  //       .awaddr
		.axs_s0_awlen   (mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_awlen),   //       .awlen
		.axs_s0_awsize  (mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_awsize),  //       .awsize
		.axs_s0_awburst (mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_awburst), //       .awburst
		.axs_s0_awvalid (mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_awvalid), //       .awvalid
		.axs_s0_awready (mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_awready), //       .awready
		.axs_s0_wdata   (mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_wdata),   //       .wdata
		.axs_s0_wstrb   (mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_wstrb),   //       .wstrb
		.axs_s0_wvalid  (mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_wvalid),  //       .wvalid
		.axs_s0_wready  (mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_wready),  //       .wready
		.axs_s0_bid     (mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_bid),     //       .bid
		.axs_s0_bvalid  (mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_bvalid),  //       .bvalid
		.axs_s0_bready  (mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_bready),  //       .bready
		.axs_s0_arid    (mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_arid),    //       .arid
		.axs_s0_araddr  (mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_araddr),  //       .araddr
		.axs_s0_arlen   (mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_arlen),   //       .arlen
		.axs_s0_arsize  (mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_arsize),  //       .arsize
		.axs_s0_arburst (mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_arburst), //       .arburst
		.axs_s0_arvalid (mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_arvalid), //       .arvalid
		.axs_s0_arready (mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_arready), //       .arready
		.axs_s0_rid     (mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_rid),     //       .rid
		.axs_s0_rdata   (mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_rdata),   //       .rdata
		.axs_s0_rlast   (mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_rlast),   //       .rlast
		.axs_s0_rvalid  (mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_rvalid),  //       .rvalid
		.axs_s0_rready  (mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_rready)   //       .rready
	);

	altera_axi_bridge #(
		.USE_PIPELINE          (1),
		.USE_M0_AWID           (1),
		.USE_M0_AWREGION       (1),
		.USE_M0_AWLEN          (1),
		.USE_M0_AWSIZE         (1),
		.USE_M0_AWBURST        (1),
		.USE_M0_AWLOCK         (1),
		.USE_M0_AWCACHE        (1),
		.USE_M0_AWQOS          (1),
		.USE_S0_AWREGION       (1),
		.USE_S0_AWLOCK         (1),
		.USE_S0_AWCACHE        (1),
		.USE_S0_AWQOS          (1),
		.USE_S0_AWPROT         (1),
		.USE_M0_WSTRB          (1),
		.USE_S0_WLAST          (1),
		.USE_M0_BID            (1),
		.USE_M0_BRESP          (1),
		.USE_S0_BRESP          (1),
		.USE_M0_ARID           (1),
		.USE_M0_ARREGION       (1),
		.USE_M0_ARLEN          (1),
		.USE_M0_ARSIZE         (1),
		.USE_M0_ARBURST        (1),
		.USE_M0_ARLOCK         (1),
		.USE_M0_ARCACHE        (1),
		.USE_M0_ARQOS          (1),
		.USE_S0_ARREGION       (1),
		.USE_S0_ARLOCK         (1),
		.USE_S0_ARCACHE        (1),
		.USE_S0_ARQOS          (1),
		.USE_S0_ARPROT         (1),
		.USE_M0_RID            (1),
		.USE_M0_RRESP          (1),
		.USE_M0_RLAST          (1),
		.USE_S0_RRESP          (1),
		.M0_ID_WIDTH           (8),
		.S0_ID_WIDTH           (8),
		.DATA_WIDTH            (16),
		.WRITE_ADDR_USER_WIDTH (64),
		.READ_ADDR_USER_WIDTH  (64),
		.WRITE_DATA_USER_WIDTH (64),
		.WRITE_RESP_USER_WIDTH (64),
		.READ_DATA_USER_WIDTH  (64),
		.ADDR_WIDTH            (23),
		.USE_S0_AWUSER         (0),
		.USE_S0_ARUSER         (0),
		.USE_S0_WUSER          (0),
		.USE_S0_RUSER          (0),
		.USE_S0_BUSER          (0),
		.USE_M0_AWUSER         (0),
		.USE_M0_ARUSER         (0),
		.USE_M0_WUSER          (0),
		.USE_M0_RUSER          (0),
		.USE_M0_BUSER          (0),
		.AXI_VERSION           ("AXI4"),
		.BURST_LENGTH_WIDTH    (8),
		.LOCK_WIDTH            (1)
	) axi_bridge_0 (
		.aclk        (clk_clk),                                                              //       clk.clk
		.aresetn     (~rst_controller_reset_out_reset),                                      // clk_reset.reset_n
		.s0_awid     (user_awid),                                                            //        s0.awid
		.s0_awaddr   (user_awaddr),                                                          //          .awaddr
		.s0_awlen    (user_awlen),                                                           //          .awlen
		.s0_awsize   (user_awsize),                                                          //          .awsize
		.s0_awburst  (user_awburst),                                                         //          .awburst
		.s0_awlock   (user_awlock),                                                          //          .awlock
		.s0_awcache  (user_awcache),                                                         //          .awcache
		.s0_awprot   (user_awprot),                                                          //          .awprot
		.s0_awqos    (user_awqos),                                                           //          .awqos
		.s0_awregion (user_awregion),                                                        //          .awregion
		.s0_awvalid  (user_awvalid),                                                         //          .awvalid
		.s0_awready  (user_awready),                                                         //          .awready
		.s0_wdata    (user_wdata),                                                           //          .wdata
		.s0_wstrb    (user_wstrb),                                                           //          .wstrb
		.s0_wlast    (user_wlast),                                                           //          .wlast
		.s0_wvalid   (user_wvalid),                                                          //          .wvalid
		.s0_wready   (user_wready),                                                          //          .wready
		.s0_bid      (user_bid),                                                             //          .bid
		.s0_bresp    (user_bresp),                                                           //          .bresp
		.s0_bvalid   (user_bvalid),                                                          //          .bvalid
		.s0_bready   (user_bready),                                                          //          .bready
		.s0_arid     (user_arid),                                                            //          .arid
		.s0_araddr   (user_araddr),                                                          //          .araddr
		.s0_arlen    (user_arlen),                                                           //          .arlen
		.s0_arsize   (user_arsize),                                                          //          .arsize
		.s0_arburst  (user_arburst),                                                         //          .arburst
		.s0_arlock   (user_arlock),                                                          //          .arlock
		.s0_arcache  (user_arcache),                                                         //          .arcache
		.s0_arprot   (user_arprot),                                                          //          .arprot
		.s0_arqos    (user_arqos),                                                           //          .arqos
		.s0_arregion (user_arregion),                                                        //          .arregion
		.s0_arvalid  (user_arvalid),                                                         //          .arvalid
		.s0_arready  (user_arready),                                                         //          .arready
		.s0_rid      (user_rid),                                                             //          .rid
		.s0_rdata    (user_rdata),                                                           //          .rdata
		.s0_rresp    (user_rresp),                                                           //          .rresp
		.s0_rlast    (user_rlast),                                                           //          .rlast
		.s0_rvalid   (user_rvalid),                                                          //          .rvalid
		.s0_rready   (user_rready),                                                          //          .rready
		.m0_awid     (axi_bridge_0_m0_awid),                                                 //        m0.awid
		.m0_awaddr   (axi_bridge_0_m0_awaddr),                                               //          .awaddr
		.m0_awlen    (axi_bridge_0_m0_awlen),                                                //          .awlen
		.m0_awsize   (axi_bridge_0_m0_awsize),                                               //          .awsize
		.m0_awburst  (axi_bridge_0_m0_awburst),                                              //          .awburst
		.m0_awlock   (axi_bridge_0_m0_awlock),                                               //          .awlock
		.m0_awcache  (axi_bridge_0_m0_awcache),                                              //          .awcache
		.m0_awprot   (axi_bridge_0_m0_awprot),                                               //          .awprot
		.m0_awqos    (axi_bridge_0_m0_awqos),                                                //          .awqos
		.m0_awregion (axi_bridge_0_m0_awregion),                                             //          .awregion
		.m0_awvalid  (axi_bridge_0_m0_awvalid),                                              //          .awvalid
		.m0_awready  (axi_bridge_0_m0_awready),                                              //          .awready
		.m0_wdata    (axi_bridge_0_m0_wdata),                                                //          .wdata
		.m0_wstrb    (axi_bridge_0_m0_wstrb),                                                //          .wstrb
		.m0_wlast    (axi_bridge_0_m0_wlast),                                                //          .wlast
		.m0_wvalid   (axi_bridge_0_m0_wvalid),                                               //          .wvalid
		.m0_wready   (axi_bridge_0_m0_wready),                                               //          .wready
		.m0_bid      (axi_bridge_0_m0_bid),                                                  //          .bid
		.m0_bresp    (axi_bridge_0_m0_bresp),                                                //          .bresp
		.m0_bvalid   (axi_bridge_0_m0_bvalid),                                               //          .bvalid
		.m0_bready   (axi_bridge_0_m0_bready),                                               //          .bready
		.m0_arid     (axi_bridge_0_m0_arid),                                                 //          .arid
		.m0_araddr   (axi_bridge_0_m0_araddr),                                               //          .araddr
		.m0_arlen    (axi_bridge_0_m0_arlen),                                                //          .arlen
		.m0_arsize   (axi_bridge_0_m0_arsize),                                               //          .arsize
		.m0_arburst  (axi_bridge_0_m0_arburst),                                              //          .arburst
		.m0_arlock   (axi_bridge_0_m0_arlock),                                               //          .arlock
		.m0_arcache  (axi_bridge_0_m0_arcache),                                              //          .arcache
		.m0_arprot   (axi_bridge_0_m0_arprot),                                               //          .arprot
		.m0_arqos    (axi_bridge_0_m0_arqos),                                                //          .arqos
		.m0_arregion (axi_bridge_0_m0_arregion),                                             //          .arregion
		.m0_arvalid  (axi_bridge_0_m0_arvalid),                                              //          .arvalid
		.m0_arready  (axi_bridge_0_m0_arready),                                              //          .arready
		.m0_rid      (axi_bridge_0_m0_rid),                                                  //          .rid
		.m0_rdata    (axi_bridge_0_m0_rdata),                                                //          .rdata
		.m0_rresp    (axi_bridge_0_m0_rresp),                                                //          .rresp
		.m0_rlast    (axi_bridge_0_m0_rlast),                                                //          .rlast
		.m0_rvalid   (axi_bridge_0_m0_rvalid),                                               //          .rvalid
		.m0_rready   (axi_bridge_0_m0_rready),                                               //          .rready
		.s0_awuser   (64'b0000000000000000000000000000000000000000000000000000000000000000), // (terminated)
		.s0_wuser    (64'b0000000000000000000000000000000000000000000000000000000000000000), // (terminated)
		.s0_buser    (),                                                                     // (terminated)
		.s0_aruser   (64'b0000000000000000000000000000000000000000000000000000000000000000), // (terminated)
		.s0_ruser    (),                                                                     // (terminated)
		.m0_awuser   (),                                                                     // (terminated)
		.m0_wuser    (),                                                                     // (terminated)
		.m0_buser    (64'b0000000000000000000000000000000000000000000000000000000000000000), // (terminated)
		.m0_aruser   (),                                                                     // (terminated)
		.m0_ruser    (64'b0000000000000000000000000000000000000000000000000000000000000000), // (terminated)
		.m0_wid      (),                                                                     // (terminated)
		.s0_wid      (8'b00000000)                                                           // (terminated)
	);

	sdram_design_mm_interconnect_0 mm_interconnect_0 (
		.axi_bridge_0_m0_awid                               (axi_bridge_0_m0_awid),                                //                              axi_bridge_0_m0.awid
		.axi_bridge_0_m0_awaddr                             (axi_bridge_0_m0_awaddr),                              //                                             .awaddr
		.axi_bridge_0_m0_awlen                              (axi_bridge_0_m0_awlen),                               //                                             .awlen
		.axi_bridge_0_m0_awsize                             (axi_bridge_0_m0_awsize),                              //                                             .awsize
		.axi_bridge_0_m0_awburst                            (axi_bridge_0_m0_awburst),                             //                                             .awburst
		.axi_bridge_0_m0_awlock                             (axi_bridge_0_m0_awlock),                              //                                             .awlock
		.axi_bridge_0_m0_awcache                            (axi_bridge_0_m0_awcache),                             //                                             .awcache
		.axi_bridge_0_m0_awprot                             (axi_bridge_0_m0_awprot),                              //                                             .awprot
		.axi_bridge_0_m0_awqos                              (axi_bridge_0_m0_awqos),                               //                                             .awqos
		.axi_bridge_0_m0_awregion                           (axi_bridge_0_m0_awregion),                            //                                             .awregion
		.axi_bridge_0_m0_awvalid                            (axi_bridge_0_m0_awvalid),                             //                                             .awvalid
		.axi_bridge_0_m0_awready                            (axi_bridge_0_m0_awready),                             //                                             .awready
		.axi_bridge_0_m0_wdata                              (axi_bridge_0_m0_wdata),                               //                                             .wdata
		.axi_bridge_0_m0_wstrb                              (axi_bridge_0_m0_wstrb),                               //                                             .wstrb
		.axi_bridge_0_m0_wlast                              (axi_bridge_0_m0_wlast),                               //                                             .wlast
		.axi_bridge_0_m0_wvalid                             (axi_bridge_0_m0_wvalid),                              //                                             .wvalid
		.axi_bridge_0_m0_wready                             (axi_bridge_0_m0_wready),                              //                                             .wready
		.axi_bridge_0_m0_bid                                (axi_bridge_0_m0_bid),                                 //                                             .bid
		.axi_bridge_0_m0_bresp                              (axi_bridge_0_m0_bresp),                               //                                             .bresp
		.axi_bridge_0_m0_bvalid                             (axi_bridge_0_m0_bvalid),                              //                                             .bvalid
		.axi_bridge_0_m0_bready                             (axi_bridge_0_m0_bready),                              //                                             .bready
		.axi_bridge_0_m0_arid                               (axi_bridge_0_m0_arid),                                //                                             .arid
		.axi_bridge_0_m0_araddr                             (axi_bridge_0_m0_araddr),                              //                                             .araddr
		.axi_bridge_0_m0_arlen                              (axi_bridge_0_m0_arlen),                               //                                             .arlen
		.axi_bridge_0_m0_arsize                             (axi_bridge_0_m0_arsize),                              //                                             .arsize
		.axi_bridge_0_m0_arburst                            (axi_bridge_0_m0_arburst),                             //                                             .arburst
		.axi_bridge_0_m0_arlock                             (axi_bridge_0_m0_arlock),                              //                                             .arlock
		.axi_bridge_0_m0_arcache                            (axi_bridge_0_m0_arcache),                             //                                             .arcache
		.axi_bridge_0_m0_arprot                             (axi_bridge_0_m0_arprot),                              //                                             .arprot
		.axi_bridge_0_m0_arqos                              (axi_bridge_0_m0_arqos),                               //                                             .arqos
		.axi_bridge_0_m0_arregion                           (axi_bridge_0_m0_arregion),                            //                                             .arregion
		.axi_bridge_0_m0_arvalid                            (axi_bridge_0_m0_arvalid),                             //                                             .arvalid
		.axi_bridge_0_m0_arready                            (axi_bridge_0_m0_arready),                             //                                             .arready
		.axi_bridge_0_m0_rid                                (axi_bridge_0_m0_rid),                                 //                                             .rid
		.axi_bridge_0_m0_rdata                              (axi_bridge_0_m0_rdata),                               //                                             .rdata
		.axi_bridge_0_m0_rresp                              (axi_bridge_0_m0_rresp),                               //                                             .rresp
		.axi_bridge_0_m0_rlast                              (axi_bridge_0_m0_rlast),                               //                                             .rlast
		.axi_bridge_0_m0_rvalid                             (axi_bridge_0_m0_rvalid),                              //                                             .rvalid
		.axi_bridge_0_m0_rready                             (axi_bridge_0_m0_rready),                              //                                             .rready
		.MT48LC4M16A2_AXI_0_axs_s0_awid                     (mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_awid),    //                    MT48LC4M16A2_AXI_0_axs_s0.awid
		.MT48LC4M16A2_AXI_0_axs_s0_awaddr                   (mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_awaddr),  //                                             .awaddr
		.MT48LC4M16A2_AXI_0_axs_s0_awlen                    (mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_awlen),   //                                             .awlen
		.MT48LC4M16A2_AXI_0_axs_s0_awsize                   (mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_awsize),  //                                             .awsize
		.MT48LC4M16A2_AXI_0_axs_s0_awburst                  (mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_awburst), //                                             .awburst
		.MT48LC4M16A2_AXI_0_axs_s0_awvalid                  (mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_awvalid), //                                             .awvalid
		.MT48LC4M16A2_AXI_0_axs_s0_awready                  (mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_awready), //                                             .awready
		.MT48LC4M16A2_AXI_0_axs_s0_wdata                    (mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_wdata),   //                                             .wdata
		.MT48LC4M16A2_AXI_0_axs_s0_wstrb                    (mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_wstrb),   //                                             .wstrb
		.MT48LC4M16A2_AXI_0_axs_s0_wvalid                   (mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_wvalid),  //                                             .wvalid
		.MT48LC4M16A2_AXI_0_axs_s0_wready                   (mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_wready),  //                                             .wready
		.MT48LC4M16A2_AXI_0_axs_s0_bid                      (mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_bid),     //                                             .bid
		.MT48LC4M16A2_AXI_0_axs_s0_bvalid                   (mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_bvalid),  //                                             .bvalid
		.MT48LC4M16A2_AXI_0_axs_s0_bready                   (mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_bready),  //                                             .bready
		.MT48LC4M16A2_AXI_0_axs_s0_arid                     (mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_arid),    //                                             .arid
		.MT48LC4M16A2_AXI_0_axs_s0_araddr                   (mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_araddr),  //                                             .araddr
		.MT48LC4M16A2_AXI_0_axs_s0_arlen                    (mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_arlen),   //                                             .arlen
		.MT48LC4M16A2_AXI_0_axs_s0_arsize                   (mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_arsize),  //                                             .arsize
		.MT48LC4M16A2_AXI_0_axs_s0_arburst                  (mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_arburst), //                                             .arburst
		.MT48LC4M16A2_AXI_0_axs_s0_arvalid                  (mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_arvalid), //                                             .arvalid
		.MT48LC4M16A2_AXI_0_axs_s0_arready                  (mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_arready), //                                             .arready
		.MT48LC4M16A2_AXI_0_axs_s0_rid                      (mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_rid),     //                                             .rid
		.MT48LC4M16A2_AXI_0_axs_s0_rdata                    (mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_rdata),   //                                             .rdata
		.MT48LC4M16A2_AXI_0_axs_s0_rlast                    (mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_rlast),   //                                             .rlast
		.MT48LC4M16A2_AXI_0_axs_s0_rvalid                   (mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_rvalid),  //                                             .rvalid
		.MT48LC4M16A2_AXI_0_axs_s0_rready                   (mm_interconnect_0_mt48lc4m16a2_axi_0_axs_s0_rready),  //                                             .rready
		.clk_0_clk_clk                                      (clk_clk),                                             //                                    clk_0_clk.clk
		.axi_bridge_0_clk_reset_reset_bridge_in_reset_reset (rst_controller_reset_out_reset)                       // axi_bridge_0_clk_reset_reset_bridge_in_reset.reset
	);

	altera_reset_controller #(
		.NUM_RESET_INPUTS          (1),
		.OUTPUT_RESET_SYNC_EDGES   ("deassert"),
		.SYNC_DEPTH                (2),
		.RESET_REQUEST_PRESENT     (0),
		.RESET_REQ_WAIT_TIME       (1),
		.MIN_RST_ASSERTION_TIME    (3),
		.RESET_REQ_EARLY_DSRT_TIME (1),
		.USE_RESET_REQUEST_IN0     (0),
		.USE_RESET_REQUEST_IN1     (0),
		.USE_RESET_REQUEST_IN2     (0),
		.USE_RESET_REQUEST_IN3     (0),
		.USE_RESET_REQUEST_IN4     (0),
		.USE_RESET_REQUEST_IN5     (0),
		.USE_RESET_REQUEST_IN6     (0),
		.USE_RESET_REQUEST_IN7     (0),
		.USE_RESET_REQUEST_IN8     (0),
		.USE_RESET_REQUEST_IN9     (0),
		.USE_RESET_REQUEST_IN10    (0),
		.USE_RESET_REQUEST_IN11    (0),
		.USE_RESET_REQUEST_IN12    (0),
		.USE_RESET_REQUEST_IN13    (0),
		.USE_RESET_REQUEST_IN14    (0),
		.USE_RESET_REQUEST_IN15    (0),
		.ADAPT_RESET_REQUEST       (0)
	) rst_controller (
		.reset_in0      (~reset_reset_n),                 // reset_in0.reset
		.clk            (clk_clk),                        //       clk.clk
		.reset_out      (rst_controller_reset_out_reset), // reset_out.reset
		.reset_req      (),                               // (terminated)
		.reset_req_in0  (1'b0),                           // (terminated)
		.reset_in1      (1'b0),                           // (terminated)
		.reset_req_in1  (1'b0),                           // (terminated)
		.reset_in2      (1'b0),                           // (terminated)
		.reset_req_in2  (1'b0),                           // (terminated)
		.reset_in3      (1'b0),                           // (terminated)
		.reset_req_in3  (1'b0),                           // (terminated)
		.reset_in4      (1'b0),                           // (terminated)
		.reset_req_in4  (1'b0),                           // (terminated)
		.reset_in5      (1'b0),                           // (terminated)
		.reset_req_in5  (1'b0),                           // (terminated)
		.reset_in6      (1'b0),                           // (terminated)
		.reset_req_in6  (1'b0),                           // (terminated)
		.reset_in7      (1'b0),                           // (terminated)
		.reset_req_in7  (1'b0),                           // (terminated)
		.reset_in8      (1'b0),                           // (terminated)
		.reset_req_in8  (1'b0),                           // (terminated)
		.reset_in9      (1'b0),                           // (terminated)
		.reset_req_in9  (1'b0),                           // (terminated)
		.reset_in10     (1'b0),                           // (terminated)
		.reset_req_in10 (1'b0),                           // (terminated)
		.reset_in11     (1'b0),                           // (terminated)
		.reset_req_in11 (1'b0),                           // (terminated)
		.reset_in12     (1'b0),                           // (terminated)
		.reset_req_in12 (1'b0),                           // (terminated)
		.reset_in13     (1'b0),                           // (terminated)
		.reset_req_in13 (1'b0),                           // (terminated)
		.reset_in14     (1'b0),                           // (terminated)
		.reset_req_in14 (1'b0),                           // (terminated)
		.reset_in15     (1'b0),                           // (terminated)
		.reset_req_in15 (1'b0)                            // (terminated)
	);

endmodule
