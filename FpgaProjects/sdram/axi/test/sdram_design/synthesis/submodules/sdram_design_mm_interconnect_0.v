// sdram_design_mm_interconnect_0.v

// This file was auto-generated from altera_mm_interconnect_hw.tcl.  If you edit it your changes
// will probably be lost.
// 
// Generated using ACDS version 18.0 614

`timescale 1 ps / 1 ps
module sdram_design_mm_interconnect_0 (
		input  wire [7:0]  axi_bridge_0_m0_awid,                               //                              axi_bridge_0_m0.awid
		input  wire [21:0] axi_bridge_0_m0_awaddr,                             //                                             .awaddr
		input  wire [7:0]  axi_bridge_0_m0_awlen,                              //                                             .awlen
		input  wire [2:0]  axi_bridge_0_m0_awsize,                             //                                             .awsize
		input  wire [1:0]  axi_bridge_0_m0_awburst,                            //                                             .awburst
		input  wire [2:0]  axi_bridge_0_m0_awprot,                             //                                             .awprot
		input  wire        axi_bridge_0_m0_awvalid,                            //                                             .awvalid
		output wire        axi_bridge_0_m0_awready,                            //                                             .awready
		input  wire [15:0] axi_bridge_0_m0_wdata,                              //                                             .wdata
		input  wire [1:0]  axi_bridge_0_m0_wstrb,                              //                                             .wstrb
		input  wire        axi_bridge_0_m0_wlast,                              //                                             .wlast
		input  wire        axi_bridge_0_m0_wvalid,                             //                                             .wvalid
		output wire        axi_bridge_0_m0_wready,                             //                                             .wready
		output wire [7:0]  axi_bridge_0_m0_bid,                                //                                             .bid
		output wire [1:0]  axi_bridge_0_m0_bresp,                              //                                             .bresp
		output wire        axi_bridge_0_m0_bvalid,                             //                                             .bvalid
		input  wire        axi_bridge_0_m0_bready,                             //                                             .bready
		input  wire [7:0]  axi_bridge_0_m0_arid,                               //                                             .arid
		input  wire [21:0] axi_bridge_0_m0_araddr,                             //                                             .araddr
		input  wire [7:0]  axi_bridge_0_m0_arlen,                              //                                             .arlen
		input  wire [2:0]  axi_bridge_0_m0_arsize,                             //                                             .arsize
		input  wire [1:0]  axi_bridge_0_m0_arburst,                            //                                             .arburst
		input  wire [2:0]  axi_bridge_0_m0_arprot,                             //                                             .arprot
		input  wire        axi_bridge_0_m0_arvalid,                            //                                             .arvalid
		output wire        axi_bridge_0_m0_arready,                            //                                             .arready
		output wire [7:0]  axi_bridge_0_m0_rid,                                //                                             .rid
		output wire [15:0] axi_bridge_0_m0_rdata,                              //                                             .rdata
		output wire [1:0]  axi_bridge_0_m0_rresp,                              //                                             .rresp
		output wire        axi_bridge_0_m0_rlast,                              //                                             .rlast
		output wire        axi_bridge_0_m0_rvalid,                             //                                             .rvalid
		input  wire        axi_bridge_0_m0_rready,                             //                                             .rready
		output wire [7:0]  MT48LC4M16A2_AXI_0_axi_awid,                        //                       MT48LC4M16A2_AXI_0_axi.awid
		output wire [21:0] MT48LC4M16A2_AXI_0_axi_awaddr,                      //                                             .awaddr
		output wire [7:0]  MT48LC4M16A2_AXI_0_axi_awlen,                       //                                             .awlen
		output wire [2:0]  MT48LC4M16A2_AXI_0_axi_awsize,                      //                                             .awsize
		output wire [1:0]  MT48LC4M16A2_AXI_0_axi_awburst,                     //                                             .awburst
		output wire        MT48LC4M16A2_AXI_0_axi_awvalid,                     //                                             .awvalid
		input  wire        MT48LC4M16A2_AXI_0_axi_awready,                     //                                             .awready
		output wire [15:0] MT48LC4M16A2_AXI_0_axi_wdata,                       //                                             .wdata
		output wire [1:0]  MT48LC4M16A2_AXI_0_axi_wstrb,                       //                                             .wstrb
		output wire        MT48LC4M16A2_AXI_0_axi_wlast,                       //                                             .wlast
		output wire        MT48LC4M16A2_AXI_0_axi_wvalid,                      //                                             .wvalid
		input  wire        MT48LC4M16A2_AXI_0_axi_wready,                      //                                             .wready
		input  wire [7:0]  MT48LC4M16A2_AXI_0_axi_bid,                         //                                             .bid
		input  wire        MT48LC4M16A2_AXI_0_axi_bvalid,                      //                                             .bvalid
		output wire        MT48LC4M16A2_AXI_0_axi_bready,                      //                                             .bready
		output wire [7:0]  MT48LC4M16A2_AXI_0_axi_arid,                        //                                             .arid
		output wire [21:0] MT48LC4M16A2_AXI_0_axi_araddr,                      //                                             .araddr
		output wire [7:0]  MT48LC4M16A2_AXI_0_axi_arlen,                       //                                             .arlen
		output wire [2:0]  MT48LC4M16A2_AXI_0_axi_arsize,                      //                                             .arsize
		output wire [1:0]  MT48LC4M16A2_AXI_0_axi_arburst,                     //                                             .arburst
		output wire        MT48LC4M16A2_AXI_0_axi_arvalid,                     //                                             .arvalid
		input  wire        MT48LC4M16A2_AXI_0_axi_arready,                     //                                             .arready
		input  wire [7:0]  MT48LC4M16A2_AXI_0_axi_rid,                         //                                             .rid
		input  wire [15:0] MT48LC4M16A2_AXI_0_axi_rdata,                       //                                             .rdata
		input  wire        MT48LC4M16A2_AXI_0_axi_rlast,                       //                                             .rlast
		input  wire        MT48LC4M16A2_AXI_0_axi_rvalid,                      //                                             .rvalid
		output wire        MT48LC4M16A2_AXI_0_axi_rready,                      //                                             .rready
		input  wire        clk_0_clk_clk,                                      //                                    clk_0_clk.clk
		input  wire        axi_bridge_0_clk_reset_reset_bridge_in_reset_reset  // axi_bridge_0_clk_reset_reset_bridge_in_reset.reset
	);

	wire   [0:0] axi_bridge_0_m0_translator_m0_ruser;    // MT48LC4M16A2_AXI_0_axi_translator:s0_ruser -> axi_bridge_0_m0_translator:m0_ruser
	wire   [0:0] axi_bridge_0_m0_translator_m0_wuser;    // axi_bridge_0_m0_translator:m0_wuser -> MT48LC4M16A2_AXI_0_axi_translator:s0_wuser
	wire   [1:0] axi_bridge_0_m0_translator_m0_awburst;  // axi_bridge_0_m0_translator:m0_awburst -> MT48LC4M16A2_AXI_0_axi_translator:s0_awburst
	wire   [3:0] axi_bridge_0_m0_translator_m0_arregion; // axi_bridge_0_m0_translator:m0_arregion -> MT48LC4M16A2_AXI_0_axi_translator:s0_arregion
	wire   [0:0] axi_bridge_0_m0_translator_m0_awuser;   // axi_bridge_0_m0_translator:m0_awuser -> MT48LC4M16A2_AXI_0_axi_translator:s0_awuser
	wire   [7:0] axi_bridge_0_m0_translator_m0_arlen;    // axi_bridge_0_m0_translator:m0_arlen -> MT48LC4M16A2_AXI_0_axi_translator:s0_arlen
	wire   [3:0] axi_bridge_0_m0_translator_m0_arqos;    // axi_bridge_0_m0_translator:m0_arqos -> MT48LC4M16A2_AXI_0_axi_translator:s0_arqos
	wire   [1:0] axi_bridge_0_m0_translator_m0_wstrb;    // axi_bridge_0_m0_translator:m0_wstrb -> MT48LC4M16A2_AXI_0_axi_translator:s0_wstrb
	wire         axi_bridge_0_m0_translator_m0_wready;   // MT48LC4M16A2_AXI_0_axi_translator:s0_wready -> axi_bridge_0_m0_translator:m0_wready
	wire   [7:0] axi_bridge_0_m0_translator_m0_rid;      // MT48LC4M16A2_AXI_0_axi_translator:s0_rid -> axi_bridge_0_m0_translator:m0_rid
	wire         axi_bridge_0_m0_translator_m0_rready;   // axi_bridge_0_m0_translator:m0_rready -> MT48LC4M16A2_AXI_0_axi_translator:s0_rready
	wire   [7:0] axi_bridge_0_m0_translator_m0_awlen;    // axi_bridge_0_m0_translator:m0_awlen -> MT48LC4M16A2_AXI_0_axi_translator:s0_awlen
	wire   [3:0] axi_bridge_0_m0_translator_m0_awqos;    // axi_bridge_0_m0_translator:m0_awqos -> MT48LC4M16A2_AXI_0_axi_translator:s0_awqos
	wire   [3:0] axi_bridge_0_m0_translator_m0_arcache;  // axi_bridge_0_m0_translator:m0_arcache -> MT48LC4M16A2_AXI_0_axi_translator:s0_arcache
	wire         axi_bridge_0_m0_translator_m0_wvalid;   // axi_bridge_0_m0_translator:m0_wvalid -> MT48LC4M16A2_AXI_0_axi_translator:s0_wvalid
	wire  [21:0] axi_bridge_0_m0_translator_m0_araddr;   // axi_bridge_0_m0_translator:m0_araddr -> MT48LC4M16A2_AXI_0_axi_translator:s0_araddr
	wire   [2:0] axi_bridge_0_m0_translator_m0_arprot;   // axi_bridge_0_m0_translator:m0_arprot -> MT48LC4M16A2_AXI_0_axi_translator:s0_arprot
	wire   [2:0] axi_bridge_0_m0_translator_m0_awprot;   // axi_bridge_0_m0_translator:m0_awprot -> MT48LC4M16A2_AXI_0_axi_translator:s0_awprot
	wire  [15:0] axi_bridge_0_m0_translator_m0_wdata;    // axi_bridge_0_m0_translator:m0_wdata -> MT48LC4M16A2_AXI_0_axi_translator:s0_wdata
	wire         axi_bridge_0_m0_translator_m0_arvalid;  // axi_bridge_0_m0_translator:m0_arvalid -> MT48LC4M16A2_AXI_0_axi_translator:s0_arvalid
	wire   [3:0] axi_bridge_0_m0_translator_m0_awcache;  // axi_bridge_0_m0_translator:m0_awcache -> MT48LC4M16A2_AXI_0_axi_translator:s0_awcache
	wire   [7:0] axi_bridge_0_m0_translator_m0_arid;     // axi_bridge_0_m0_translator:m0_arid -> MT48LC4M16A2_AXI_0_axi_translator:s0_arid
	wire   [0:0] axi_bridge_0_m0_translator_m0_arlock;   // axi_bridge_0_m0_translator:m0_arlock -> MT48LC4M16A2_AXI_0_axi_translator:s0_arlock
	wire   [0:0] axi_bridge_0_m0_translator_m0_awlock;   // axi_bridge_0_m0_translator:m0_awlock -> MT48LC4M16A2_AXI_0_axi_translator:s0_awlock
	wire  [21:0] axi_bridge_0_m0_translator_m0_awaddr;   // axi_bridge_0_m0_translator:m0_awaddr -> MT48LC4M16A2_AXI_0_axi_translator:s0_awaddr
	wire   [1:0] axi_bridge_0_m0_translator_m0_bresp;    // MT48LC4M16A2_AXI_0_axi_translator:s0_bresp -> axi_bridge_0_m0_translator:m0_bresp
	wire         axi_bridge_0_m0_translator_m0_arready;  // MT48LC4M16A2_AXI_0_axi_translator:s0_arready -> axi_bridge_0_m0_translator:m0_arready
	wire  [15:0] axi_bridge_0_m0_translator_m0_rdata;    // MT48LC4M16A2_AXI_0_axi_translator:s0_rdata -> axi_bridge_0_m0_translator:m0_rdata
	wire         axi_bridge_0_m0_translator_m0_awready;  // MT48LC4M16A2_AXI_0_axi_translator:s0_awready -> axi_bridge_0_m0_translator:m0_awready
	wire   [1:0] axi_bridge_0_m0_translator_m0_arburst;  // axi_bridge_0_m0_translator:m0_arburst -> MT48LC4M16A2_AXI_0_axi_translator:s0_arburst
	wire   [2:0] axi_bridge_0_m0_translator_m0_arsize;   // axi_bridge_0_m0_translator:m0_arsize -> MT48LC4M16A2_AXI_0_axi_translator:s0_arsize
	wire         axi_bridge_0_m0_translator_m0_bready;   // axi_bridge_0_m0_translator:m0_bready -> MT48LC4M16A2_AXI_0_axi_translator:s0_bready
	wire         axi_bridge_0_m0_translator_m0_rlast;    // MT48LC4M16A2_AXI_0_axi_translator:s0_rlast -> axi_bridge_0_m0_translator:m0_rlast
	wire         axi_bridge_0_m0_translator_m0_wlast;    // axi_bridge_0_m0_translator:m0_wlast -> MT48LC4M16A2_AXI_0_axi_translator:s0_wlast
	wire   [3:0] axi_bridge_0_m0_translator_m0_awregion; // axi_bridge_0_m0_translator:m0_awregion -> MT48LC4M16A2_AXI_0_axi_translator:s0_awregion
	wire   [0:0] axi_bridge_0_m0_translator_m0_buser;    // MT48LC4M16A2_AXI_0_axi_translator:s0_buser -> axi_bridge_0_m0_translator:m0_buser
	wire   [1:0] axi_bridge_0_m0_translator_m0_rresp;    // MT48LC4M16A2_AXI_0_axi_translator:s0_rresp -> axi_bridge_0_m0_translator:m0_rresp
	wire   [7:0] axi_bridge_0_m0_translator_m0_awid;     // axi_bridge_0_m0_translator:m0_awid -> MT48LC4M16A2_AXI_0_axi_translator:s0_awid
	wire   [7:0] axi_bridge_0_m0_translator_m0_bid;      // MT48LC4M16A2_AXI_0_axi_translator:s0_bid -> axi_bridge_0_m0_translator:m0_bid
	wire         axi_bridge_0_m0_translator_m0_bvalid;   // MT48LC4M16A2_AXI_0_axi_translator:s0_bvalid -> axi_bridge_0_m0_translator:m0_bvalid
	wire   [2:0] axi_bridge_0_m0_translator_m0_awsize;   // axi_bridge_0_m0_translator:m0_awsize -> MT48LC4M16A2_AXI_0_axi_translator:s0_awsize
	wire         axi_bridge_0_m0_translator_m0_awvalid;  // axi_bridge_0_m0_translator:m0_awvalid -> MT48LC4M16A2_AXI_0_axi_translator:s0_awvalid
	wire   [0:0] axi_bridge_0_m0_translator_m0_aruser;   // axi_bridge_0_m0_translator:m0_aruser -> MT48LC4M16A2_AXI_0_axi_translator:s0_aruser
	wire         axi_bridge_0_m0_translator_m0_rvalid;   // MT48LC4M16A2_AXI_0_axi_translator:s0_rvalid -> axi_bridge_0_m0_translator:m0_rvalid

	altera_merlin_axi_translator #(
		.USE_S0_AWID                       (1),
		.USE_S0_AWREGION                   (0),
		.USE_M0_AWREGION                   (1),
		.USE_S0_AWLEN                      (1),
		.USE_S0_AWSIZE                     (1),
		.USE_S0_AWBURST                    (1),
		.USE_S0_AWLOCK                     (0),
		.USE_M0_AWLOCK                     (1),
		.USE_S0_AWCACHE                    (0),
		.USE_M0_AWCACHE                    (1),
		.USE_M0_AWPROT                     (1),
		.USE_S0_AWQOS                      (0),
		.USE_M0_AWQOS                      (1),
		.USE_S0_WSTRB                      (1),
		.USE_M0_WLAST                      (1),
		.USE_S0_BID                        (1),
		.USE_S0_BRESP                      (1),
		.USE_M0_BRESP                      (1),
		.USE_S0_ARID                       (1),
		.USE_S0_ARREGION                   (0),
		.USE_M0_ARREGION                   (1),
		.USE_S0_ARLEN                      (1),
		.USE_S0_ARSIZE                     (1),
		.USE_S0_ARBURST                    (1),
		.USE_S0_ARLOCK                     (0),
		.USE_M0_ARLOCK                     (1),
		.USE_M0_ARCACHE                    (1),
		.USE_M0_ARQOS                      (1),
		.USE_M0_ARPROT                     (1),
		.USE_S0_ARCACHE                    (0),
		.USE_S0_ARQOS                      (0),
		.USE_S0_RID                        (1),
		.USE_S0_RRESP                      (1),
		.USE_M0_RRESP                      (1),
		.USE_S0_RLAST                      (1),
		.M0_ID_WIDTH                       (8),
		.DATA_WIDTH                        (16),
		.S0_ID_WIDTH                       (8),
		.M0_ADDR_WIDTH                     (22),
		.S0_WRITE_ADDR_USER_WIDTH          (1),
		.S0_READ_ADDR_USER_WIDTH           (1),
		.M0_WRITE_ADDR_USER_WIDTH          (1),
		.M0_READ_ADDR_USER_WIDTH           (1),
		.S0_WRITE_DATA_USER_WIDTH          (1),
		.S0_WRITE_RESPONSE_DATA_USER_WIDTH (1),
		.S0_READ_DATA_USER_WIDTH           (1),
		.M0_WRITE_DATA_USER_WIDTH          (1),
		.M0_WRITE_RESPONSE_DATA_USER_WIDTH (1),
		.M0_READ_DATA_USER_WIDTH           (1),
		.S0_ADDR_WIDTH                     (22),
		.USE_S0_AWUSER                     (0),
		.USE_S0_ARUSER                     (0),
		.USE_S0_WUSER                      (0),
		.USE_S0_RUSER                      (0),
		.USE_S0_BUSER                      (0),
		.USE_M0_AWUSER                     (1),
		.USE_M0_ARUSER                     (1),
		.USE_M0_WUSER                      (1),
		.USE_M0_RUSER                      (1),
		.USE_M0_BUSER                      (1),
		.M0_AXI_VERSION                    ("AXI4"),
		.M0_BURST_LENGTH_WIDTH             (8),
		.S0_BURST_LENGTH_WIDTH             (8),
		.M0_LOCK_WIDTH                     (1),
		.S0_LOCK_WIDTH                     (1),
		.S0_AXI_VERSION                    ("AXI4")
	) axi_bridge_0_m0_translator (
		.aclk        (clk_0_clk_clk),                                       //       clk.clk
		.aresetn     (~axi_bridge_0_clk_reset_reset_bridge_in_reset_reset), // clk_reset.reset_n
		.m0_awid     (axi_bridge_0_m0_translator_m0_awid),                  //        m0.awid
		.m0_awaddr   (axi_bridge_0_m0_translator_m0_awaddr),                //          .awaddr
		.m0_awlen    (axi_bridge_0_m0_translator_m0_awlen),                 //          .awlen
		.m0_awsize   (axi_bridge_0_m0_translator_m0_awsize),                //          .awsize
		.m0_awburst  (axi_bridge_0_m0_translator_m0_awburst),               //          .awburst
		.m0_awlock   (axi_bridge_0_m0_translator_m0_awlock),                //          .awlock
		.m0_awcache  (axi_bridge_0_m0_translator_m0_awcache),               //          .awcache
		.m0_awprot   (axi_bridge_0_m0_translator_m0_awprot),                //          .awprot
		.m0_awuser   (axi_bridge_0_m0_translator_m0_awuser),                //          .awuser
		.m0_awqos    (axi_bridge_0_m0_translator_m0_awqos),                 //          .awqos
		.m0_awregion (axi_bridge_0_m0_translator_m0_awregion),              //          .awregion
		.m0_awvalid  (axi_bridge_0_m0_translator_m0_awvalid),               //          .awvalid
		.m0_awready  (axi_bridge_0_m0_translator_m0_awready),               //          .awready
		.m0_wdata    (axi_bridge_0_m0_translator_m0_wdata),                 //          .wdata
		.m0_wstrb    (axi_bridge_0_m0_translator_m0_wstrb),                 //          .wstrb
		.m0_wlast    (axi_bridge_0_m0_translator_m0_wlast),                 //          .wlast
		.m0_wvalid   (axi_bridge_0_m0_translator_m0_wvalid),                //          .wvalid
		.m0_wuser    (axi_bridge_0_m0_translator_m0_wuser),                 //          .wuser
		.m0_wready   (axi_bridge_0_m0_translator_m0_wready),                //          .wready
		.m0_bid      (axi_bridge_0_m0_translator_m0_bid),                   //          .bid
		.m0_bresp    (axi_bridge_0_m0_translator_m0_bresp),                 //          .bresp
		.m0_buser    (axi_bridge_0_m0_translator_m0_buser),                 //          .buser
		.m0_bvalid   (axi_bridge_0_m0_translator_m0_bvalid),                //          .bvalid
		.m0_bready   (axi_bridge_0_m0_translator_m0_bready),                //          .bready
		.m0_arid     (axi_bridge_0_m0_translator_m0_arid),                  //          .arid
		.m0_araddr   (axi_bridge_0_m0_translator_m0_araddr),                //          .araddr
		.m0_arlen    (axi_bridge_0_m0_translator_m0_arlen),                 //          .arlen
		.m0_arsize   (axi_bridge_0_m0_translator_m0_arsize),                //          .arsize
		.m0_arburst  (axi_bridge_0_m0_translator_m0_arburst),               //          .arburst
		.m0_arlock   (axi_bridge_0_m0_translator_m0_arlock),                //          .arlock
		.m0_arcache  (axi_bridge_0_m0_translator_m0_arcache),               //          .arcache
		.m0_arprot   (axi_bridge_0_m0_translator_m0_arprot),                //          .arprot
		.m0_aruser   (axi_bridge_0_m0_translator_m0_aruser),                //          .aruser
		.m0_arqos    (axi_bridge_0_m0_translator_m0_arqos),                 //          .arqos
		.m0_arregion (axi_bridge_0_m0_translator_m0_arregion),              //          .arregion
		.m0_arvalid  (axi_bridge_0_m0_translator_m0_arvalid),               //          .arvalid
		.m0_arready  (axi_bridge_0_m0_translator_m0_arready),               //          .arready
		.m0_rid      (axi_bridge_0_m0_translator_m0_rid),                   //          .rid
		.m0_rdata    (axi_bridge_0_m0_translator_m0_rdata),                 //          .rdata
		.m0_rresp    (axi_bridge_0_m0_translator_m0_rresp),                 //          .rresp
		.m0_rlast    (axi_bridge_0_m0_translator_m0_rlast),                 //          .rlast
		.m0_rvalid   (axi_bridge_0_m0_translator_m0_rvalid),                //          .rvalid
		.m0_rready   (axi_bridge_0_m0_translator_m0_rready),                //          .rready
		.m0_ruser    (axi_bridge_0_m0_translator_m0_ruser),                 //          .ruser
		.s0_awid     (axi_bridge_0_m0_awid),                                //        s0.awid
		.s0_awaddr   (axi_bridge_0_m0_awaddr),                              //          .awaddr
		.s0_awlen    (axi_bridge_0_m0_awlen),                               //          .awlen
		.s0_awsize   (axi_bridge_0_m0_awsize),                              //          .awsize
		.s0_awburst  (axi_bridge_0_m0_awburst),                             //          .awburst
		.s0_awprot   (axi_bridge_0_m0_awprot),                              //          .awprot
		.s0_awvalid  (axi_bridge_0_m0_awvalid),                             //          .awvalid
		.s0_awready  (axi_bridge_0_m0_awready),                             //          .awready
		.s0_wdata    (axi_bridge_0_m0_wdata),                               //          .wdata
		.s0_wstrb    (axi_bridge_0_m0_wstrb),                               //          .wstrb
		.s0_wlast    (axi_bridge_0_m0_wlast),                               //          .wlast
		.s0_wvalid   (axi_bridge_0_m0_wvalid),                              //          .wvalid
		.s0_wready   (axi_bridge_0_m0_wready),                              //          .wready
		.s0_bid      (axi_bridge_0_m0_bid),                                 //          .bid
		.s0_bresp    (axi_bridge_0_m0_bresp),                               //          .bresp
		.s0_bvalid   (axi_bridge_0_m0_bvalid),                              //          .bvalid
		.s0_bready   (axi_bridge_0_m0_bready),                              //          .bready
		.s0_arid     (axi_bridge_0_m0_arid),                                //          .arid
		.s0_araddr   (axi_bridge_0_m0_araddr),                              //          .araddr
		.s0_arlen    (axi_bridge_0_m0_arlen),                               //          .arlen
		.s0_arsize   (axi_bridge_0_m0_arsize),                              //          .arsize
		.s0_arburst  (axi_bridge_0_m0_arburst),                             //          .arburst
		.s0_arprot   (axi_bridge_0_m0_arprot),                              //          .arprot
		.s0_arvalid  (axi_bridge_0_m0_arvalid),                             //          .arvalid
		.s0_arready  (axi_bridge_0_m0_arready),                             //          .arready
		.s0_rid      (axi_bridge_0_m0_rid),                                 //          .rid
		.s0_rdata    (axi_bridge_0_m0_rdata),                               //          .rdata
		.s0_rresp    (axi_bridge_0_m0_rresp),                               //          .rresp
		.s0_rlast    (axi_bridge_0_m0_rlast),                               //          .rlast
		.s0_rvalid   (axi_bridge_0_m0_rvalid),                              //          .rvalid
		.s0_rready   (axi_bridge_0_m0_rready),                              //          .rready
		.s0_awlock   (1'b0),                                                // (terminated)
		.s0_awcache  (4'b0000),                                             // (terminated)
		.s0_awuser   (1'b0),                                                // (terminated)
		.s0_awqos    (4'b0000),                                             // (terminated)
		.s0_awregion (4'b0000),                                             // (terminated)
		.s0_wuser    (1'b0),                                                // (terminated)
		.s0_buser    (),                                                    // (terminated)
		.s0_arlock   (1'b0),                                                // (terminated)
		.s0_arcache  (4'b0000),                                             // (terminated)
		.s0_aruser   (1'b0),                                                // (terminated)
		.s0_arqos    (4'b0000),                                             // (terminated)
		.s0_arregion (4'b0000),                                             // (terminated)
		.s0_ruser    (),                                                    // (terminated)
		.s0_wid      (8'b00000000),                                         // (terminated)
		.m0_wid      ()                                                     // (terminated)
	);

	altera_merlin_axi_translator #(
		.USE_S0_AWID                       (1),
		.USE_S0_AWREGION                   (1),
		.USE_M0_AWREGION                   (0),
		.USE_S0_AWLEN                      (1),
		.USE_S0_AWSIZE                     (1),
		.USE_S0_AWBURST                    (1),
		.USE_S0_AWLOCK                     (1),
		.USE_M0_AWLOCK                     (0),
		.USE_S0_AWCACHE                    (1),
		.USE_M0_AWCACHE                    (0),
		.USE_M0_AWPROT                     (0),
		.USE_S0_AWQOS                      (1),
		.USE_M0_AWQOS                      (0),
		.USE_S0_WSTRB                      (1),
		.USE_M0_WLAST                      (1),
		.USE_S0_BID                        (1),
		.USE_S0_BRESP                      (1),
		.USE_M0_BRESP                      (0),
		.USE_S0_ARID                       (1),
		.USE_S0_ARREGION                   (1),
		.USE_M0_ARREGION                   (0),
		.USE_S0_ARLEN                      (1),
		.USE_S0_ARSIZE                     (1),
		.USE_S0_ARBURST                    (1),
		.USE_S0_ARLOCK                     (1),
		.USE_M0_ARLOCK                     (0),
		.USE_M0_ARCACHE                    (0),
		.USE_M0_ARQOS                      (0),
		.USE_M0_ARPROT                     (0),
		.USE_S0_ARCACHE                    (1),
		.USE_S0_ARQOS                      (1),
		.USE_S0_RID                        (1),
		.USE_S0_RRESP                      (1),
		.USE_M0_RRESP                      (0),
		.USE_S0_RLAST                      (1),
		.M0_ID_WIDTH                       (8),
		.DATA_WIDTH                        (16),
		.S0_ID_WIDTH                       (8),
		.M0_ADDR_WIDTH                     (22),
		.S0_WRITE_ADDR_USER_WIDTH          (1),
		.S0_READ_ADDR_USER_WIDTH           (1),
		.M0_WRITE_ADDR_USER_WIDTH          (1),
		.M0_READ_ADDR_USER_WIDTH           (1),
		.S0_WRITE_DATA_USER_WIDTH          (1),
		.S0_WRITE_RESPONSE_DATA_USER_WIDTH (1),
		.S0_READ_DATA_USER_WIDTH           (1),
		.M0_WRITE_DATA_USER_WIDTH          (1),
		.M0_WRITE_RESPONSE_DATA_USER_WIDTH (1),
		.M0_READ_DATA_USER_WIDTH           (1),
		.S0_ADDR_WIDTH                     (22),
		.USE_S0_AWUSER                     (1),
		.USE_S0_ARUSER                     (1),
		.USE_S0_WUSER                      (1),
		.USE_S0_RUSER                      (1),
		.USE_S0_BUSER                      (1),
		.USE_M0_AWUSER                     (0),
		.USE_M0_ARUSER                     (0),
		.USE_M0_WUSER                      (0),
		.USE_M0_RUSER                      (0),
		.USE_M0_BUSER                      (0),
		.M0_AXI_VERSION                    ("AXI4"),
		.M0_BURST_LENGTH_WIDTH             (8),
		.S0_BURST_LENGTH_WIDTH             (8),
		.M0_LOCK_WIDTH                     (1),
		.S0_LOCK_WIDTH                     (1),
		.S0_AXI_VERSION                    ("AXI4")
	) mt48lc4m16a2_axi_0_axi_translator (
		.aclk        (clk_0_clk_clk),                                       //       clk.clk
		.aresetn     (~axi_bridge_0_clk_reset_reset_bridge_in_reset_reset), // clk_reset.reset_n
		.m0_awid     (MT48LC4M16A2_AXI_0_axi_awid),                         //        m0.awid
		.m0_awaddr   (MT48LC4M16A2_AXI_0_axi_awaddr),                       //          .awaddr
		.m0_awlen    (MT48LC4M16A2_AXI_0_axi_awlen),                        //          .awlen
		.m0_awsize   (MT48LC4M16A2_AXI_0_axi_awsize),                       //          .awsize
		.m0_awburst  (MT48LC4M16A2_AXI_0_axi_awburst),                      //          .awburst
		.m0_awvalid  (MT48LC4M16A2_AXI_0_axi_awvalid),                      //          .awvalid
		.m0_awready  (MT48LC4M16A2_AXI_0_axi_awready),                      //          .awready
		.m0_wdata    (MT48LC4M16A2_AXI_0_axi_wdata),                        //          .wdata
		.m0_wstrb    (MT48LC4M16A2_AXI_0_axi_wstrb),                        //          .wstrb
		.m0_wlast    (MT48LC4M16A2_AXI_0_axi_wlast),                        //          .wlast
		.m0_wvalid   (MT48LC4M16A2_AXI_0_axi_wvalid),                       //          .wvalid
		.m0_wready   (MT48LC4M16A2_AXI_0_axi_wready),                       //          .wready
		.m0_bid      (MT48LC4M16A2_AXI_0_axi_bid),                          //          .bid
		.m0_bvalid   (MT48LC4M16A2_AXI_0_axi_bvalid),                       //          .bvalid
		.m0_bready   (MT48LC4M16A2_AXI_0_axi_bready),                       //          .bready
		.m0_arid     (MT48LC4M16A2_AXI_0_axi_arid),                         //          .arid
		.m0_araddr   (MT48LC4M16A2_AXI_0_axi_araddr),                       //          .araddr
		.m0_arlen    (MT48LC4M16A2_AXI_0_axi_arlen),                        //          .arlen
		.m0_arsize   (MT48LC4M16A2_AXI_0_axi_arsize),                       //          .arsize
		.m0_arburst  (MT48LC4M16A2_AXI_0_axi_arburst),                      //          .arburst
		.m0_arvalid  (MT48LC4M16A2_AXI_0_axi_arvalid),                      //          .arvalid
		.m0_arready  (MT48LC4M16A2_AXI_0_axi_arready),                      //          .arready
		.m0_rid      (MT48LC4M16A2_AXI_0_axi_rid),                          //          .rid
		.m0_rdata    (MT48LC4M16A2_AXI_0_axi_rdata),                        //          .rdata
		.m0_rlast    (MT48LC4M16A2_AXI_0_axi_rlast),                        //          .rlast
		.m0_rvalid   (MT48LC4M16A2_AXI_0_axi_rvalid),                       //          .rvalid
		.m0_rready   (MT48LC4M16A2_AXI_0_axi_rready),                       //          .rready
		.s0_awid     (axi_bridge_0_m0_translator_m0_awid),                  //        s0.awid
		.s0_awaddr   (axi_bridge_0_m0_translator_m0_awaddr),                //          .awaddr
		.s0_awlen    (axi_bridge_0_m0_translator_m0_awlen),                 //          .awlen
		.s0_awsize   (axi_bridge_0_m0_translator_m0_awsize),                //          .awsize
		.s0_awburst  (axi_bridge_0_m0_translator_m0_awburst),               //          .awburst
		.s0_awlock   (axi_bridge_0_m0_translator_m0_awlock),                //          .awlock
		.s0_awcache  (axi_bridge_0_m0_translator_m0_awcache),               //          .awcache
		.s0_awprot   (axi_bridge_0_m0_translator_m0_awprot),                //          .awprot
		.s0_awuser   (axi_bridge_0_m0_translator_m0_awuser),                //          .awuser
		.s0_awqos    (axi_bridge_0_m0_translator_m0_awqos),                 //          .awqos
		.s0_awregion (axi_bridge_0_m0_translator_m0_awregion),              //          .awregion
		.s0_awvalid  (axi_bridge_0_m0_translator_m0_awvalid),               //          .awvalid
		.s0_awready  (axi_bridge_0_m0_translator_m0_awready),               //          .awready
		.s0_wdata    (axi_bridge_0_m0_translator_m0_wdata),                 //          .wdata
		.s0_wstrb    (axi_bridge_0_m0_translator_m0_wstrb),                 //          .wstrb
		.s0_wlast    (axi_bridge_0_m0_translator_m0_wlast),                 //          .wlast
		.s0_wvalid   (axi_bridge_0_m0_translator_m0_wvalid),                //          .wvalid
		.s0_wuser    (axi_bridge_0_m0_translator_m0_wuser),                 //          .wuser
		.s0_wready   (axi_bridge_0_m0_translator_m0_wready),                //          .wready
		.s0_bid      (axi_bridge_0_m0_translator_m0_bid),                   //          .bid
		.s0_bresp    (axi_bridge_0_m0_translator_m0_bresp),                 //          .bresp
		.s0_buser    (axi_bridge_0_m0_translator_m0_buser),                 //          .buser
		.s0_bvalid   (axi_bridge_0_m0_translator_m0_bvalid),                //          .bvalid
		.s0_bready   (axi_bridge_0_m0_translator_m0_bready),                //          .bready
		.s0_arid     (axi_bridge_0_m0_translator_m0_arid),                  //          .arid
		.s0_araddr   (axi_bridge_0_m0_translator_m0_araddr),                //          .araddr
		.s0_arlen    (axi_bridge_0_m0_translator_m0_arlen),                 //          .arlen
		.s0_arsize   (axi_bridge_0_m0_translator_m0_arsize),                //          .arsize
		.s0_arburst  (axi_bridge_0_m0_translator_m0_arburst),               //          .arburst
		.s0_arlock   (axi_bridge_0_m0_translator_m0_arlock),                //          .arlock
		.s0_arcache  (axi_bridge_0_m0_translator_m0_arcache),               //          .arcache
		.s0_arprot   (axi_bridge_0_m0_translator_m0_arprot),                //          .arprot
		.s0_aruser   (axi_bridge_0_m0_translator_m0_aruser),                //          .aruser
		.s0_arqos    (axi_bridge_0_m0_translator_m0_arqos),                 //          .arqos
		.s0_arregion (axi_bridge_0_m0_translator_m0_arregion),              //          .arregion
		.s0_arvalid  (axi_bridge_0_m0_translator_m0_arvalid),               //          .arvalid
		.s0_arready  (axi_bridge_0_m0_translator_m0_arready),               //          .arready
		.s0_rid      (axi_bridge_0_m0_translator_m0_rid),                   //          .rid
		.s0_rdata    (axi_bridge_0_m0_translator_m0_rdata),                 //          .rdata
		.s0_rresp    (axi_bridge_0_m0_translator_m0_rresp),                 //          .rresp
		.s0_rlast    (axi_bridge_0_m0_translator_m0_rlast),                 //          .rlast
		.s0_rvalid   (axi_bridge_0_m0_translator_m0_rvalid),                //          .rvalid
		.s0_rready   (axi_bridge_0_m0_translator_m0_rready),                //          .rready
		.s0_ruser    (axi_bridge_0_m0_translator_m0_ruser),                 //          .ruser
		.m0_awlock   (),                                                    // (terminated)
		.m0_awcache  (),                                                    // (terminated)
		.m0_awprot   (),                                                    // (terminated)
		.m0_awuser   (),                                                    // (terminated)
		.m0_awqos    (),                                                    // (terminated)
		.m0_awregion (),                                                    // (terminated)
		.m0_wuser    (),                                                    // (terminated)
		.m0_bresp    (2'b00),                                               // (terminated)
		.m0_buser    (1'b0),                                                // (terminated)
		.m0_arlock   (),                                                    // (terminated)
		.m0_arcache  (),                                                    // (terminated)
		.m0_arprot   (),                                                    // (terminated)
		.m0_aruser   (),                                                    // (terminated)
		.m0_arqos    (),                                                    // (terminated)
		.m0_arregion (),                                                    // (terminated)
		.m0_rresp    (2'b00),                                               // (terminated)
		.m0_ruser    (1'b0),                                                // (terminated)
		.s0_wid      (8'b00000000),                                         // (terminated)
		.m0_wid      ()                                                     // (terminated)
	);

endmodule
